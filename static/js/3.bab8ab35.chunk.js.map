{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","avatar","src","photos","large","Preloader","Post","item","message","likesCount","maxLength","maxlengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","MyPosts","React","memo","postElement","posts","reverse","map","p","postsBlock","values","addNewPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.bab8ab35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_img\":\"ProfileInfo_content_img__1UmmN\",\"item\":\"ProfileInfo_item__1wD8h\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1K-RV\",\"avatar\":\"ProfileInfo_avatar__1rJ1k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__25x64\",\"posts\":\"MyPosts_posts__1AiDp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1nWSQ\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n         setEditMode(true)\r\n    }\r\n    const deActivateMode = () => {\r\n         setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status || \"set a status message\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deActivateMode} onChange={onStatusChange} value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n     return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div>\r\n                    <img className={s.avatar}  src={profile.photos.large !=null ? profile.photos.large : 'http://localhost:3000/static/media/userPhoto.3d1c93dd.png'}/>\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return <div className={s.item}>\r\n    <img src='https://www.w3schools.com/howto/img_avatar.png' />\r\n    {props.message}\r\n        <div>\r\n      <span>Likes {props.likesCount}</span>\r\n    </div>\r\n  </div>\r\n\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post.jsx';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxlengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControl/FormsControl\";\r\n\r\nconst maxLength = maxlengthCreator(20);\r\n\r\nconst PostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'Write your post text'} component={Textarea} name={'newPostText'}\r\n                   validate={[required, maxLength]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet PostReduxForm = reduxForm({form: 'ProfileAddNewPost'})(PostForm)\r\nconst MyPosts = React.memo((props) => {\r\n    let postElement = [...props.posts].reverse().map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addNewPost(values.newPostText)\r\n    }\r\n    return <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <div>\r\n            <PostReduxForm onSubmit={addNewPost}/>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postElement}\r\n        </div>\r\n    </div>\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}