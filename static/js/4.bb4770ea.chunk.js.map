{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/AddMessageForm.js","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialogs","active","dialogImage","src","to","id","name","MessageItem","messagesItems","message","maxLength100","maxlengthCreator","DialogAddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","dialogElement","map","d","messageElement","messages","m","isAuth","search","type","dialogsItems","dispatchMessage","values","addMessage","messageText","mapStateToPropsForRedirect","state","auth","compose","connect","messagePage","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,cAAgB,+BAA+B,YAAc,6BAA6B,gBAAkB,mC,+FCUtSC,EAPI,SAACC,GAChB,OAAO,yBAAKC,UAAWC,IAAEC,QAAU,IAAMD,IAAEE,QACvC,yBAAKH,UAAWC,IAAEG,YAAaC,IAAI,mDACnC,kBAAC,IAAD,CAASC,GAAI,WAAaP,EAAMQ,IAAKR,EAAMS,Q,OCGpCC,EAPK,SAACV,GAEjB,OAAO,yBAAKC,UAAWC,IAAES,eACpBX,EAAMY,U,iCCDTC,EAAeC,YAAiB,KAazBC,EAA4BC,YAAU,CAACC,KAAM,yBAAjBD,EAXlB,SAAChB,GACpB,OAAO,0BAAMkB,SAAUlB,EAAMmB,cACzB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAY,qBAAqBC,UAAWC,IAAUd,KAAK,cAAce,SAAU,CAACC,IAAUZ,MAEzG,6BACI,qDCsBGa,EA5BC,SAAC1B,GACb,IAAI2B,EAAgB3B,EAAMG,QAAQA,QAAQyB,KAAM,SAAAC,GAAC,OAAK,kBAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMD,GAAIqB,EAAErB,QAClFsB,EAAiB9B,EAAMG,QAAQ4B,SAASH,KAAM,SAAAI,GAAC,OAAK,kBAAC,EAAD,CAAapB,QAASoB,EAAEpB,aAMhF,OAAIZ,EAAMiC,OAGN,yBAAKhC,UAAWC,IAAEC,SACd,yBAAKF,UAAWC,IAAEgC,QACd,2BAAOC,KAAK,OAAOd,YAAY,YAEnC,yBAAKpB,UAAWC,IAAEkC,cACd,kBAAC,IAAD,CAAS7B,GAAI,SAAWoB,EAAcnB,IAAKmB,GAC3C,yBAAK1B,UAAWC,IAAEmC,iBAClB,yBAAKpC,UAAWC,IAAE6B,UAAlB,IAA8BD,EAA9B,KACI,kBAACf,EAAD,CAA2BG,SAfvB,SAACoB,GACjBtC,EAAMuC,WAAWD,EAAOE,mBAGH,kBAAC,IAAD,CAAUjC,GAAI,Y,wCCXvCkC,EAA6B,SAACC,GAAD,MAAY,CACzCT,OAAQS,EAAMC,KAAKV,S,OCgBRW,sBACXC,aAfoB,SAACH,GACrB,MAAO,CACHvC,QAASuC,EAAMI,gBAII,SAACC,GACxB,MAAO,CACHR,WAAY,SAACC,GACTO,EAASC,YAAwBR,UDRb,SAACS,GAAe,IACtCC,EADqC,uKAGpC,OAAIC,KAAKnD,MAAMiC,OACR,kBAACgB,EAAcE,KAAKnD,OADG,kBAAC,IAAD,CAAUO,GAAG,eAHP,GACX6C,IAAMH,WAQtC,OAFqCJ,YAAQJ,EAARI,CAAoCK,KCM9DN,CAGblB","file":"static/js/4.bb4770ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2oy1V\",\"search\":\"Dialogs_search__353Zl\",\"dialogsItems\":\"Dialogs_dialogsItems__1YJOQ\",\"active\":\"Dialogs_active__3BflE\",\"messages\":\"Dialogs_messages__1GgrT\",\"messagesItems\":\"Dialogs_messagesItems__2N39b\",\"dialogImage\":\"Dialogs_dialogImage__2Vu3N\",\"dispatchMessage\":\"Dialogs_dispatchMessage__3Cjia\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={s.dialogs + ' ' + s.active}>\r\n        <img className={s.dialogImage} src='https://www.w3schools.com/howto/img_avatar.png' />\r\n        <NavLink to={'/dialog/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n\r\n    return <div className={s.messagesItems}>\r\n        {props.message}\r\n    </div>\r\n}\r\n\r\nexport default MessageItem;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../Common/FormsControl/FormsControl\";\r\nimport {maxlengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxlengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder='Write your message' component={Textarea} name='messageText' validate={[required, maxLength100]}/>\r\n        </div>\r\n        <div>\r\n            <button>Send message</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport const DialogAddMessageFormRedux = reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport {DialogAddMessageFormRedux} from \"./AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElement = props.dialogs.dialogs.map ( d => (<DialogItem name={d.name} id={d.id}/>));\r\n    let messageElement = props.dialogs.messages.map ( m => (<MessageItem message={m.message}/>));\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.messageText);\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.search}>\r\n                <input type=\"text\" placeholder='search'/>\r\n            </div>\r\n            <div className={s.dialogsItems}>\r\n                <NavLink to={'dialog' + dialogElement.id}>{dialogElement}</NavLink>\r\n                <div className={s.dispatchMessage}>\r\n                <div className={s.messages}> {messageElement} </div>\r\n                    <DialogAddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n       render() {\r\n           if(!this.props.isAuth) return <Redirect to='/login'/>\r\n           return <Component {...this.props}/>\r\n       }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messagePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (messageText) => {\r\n            dispatch(addMessageActionCreator(messageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}